server {
    listen 80;
    # your server_name for production
    server_name localhost;
  server_tokens off;
    location / {
        # default port, could be changed if you use next with custom server
        proxy_pass http://frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #
        # Custom headers and headers various browsers *should* be OK with but aren't
        #
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        #
        # Tell client that this pre-flight info is valid for 20 days
        #
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
     }
     if ($request_method = 'POST') {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
     }
     if ($request_method = 'GET') {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
     }
    }
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    ### For https
    # location / {
    #     return 301 https://$host$request_uri;
    # }
}

# server {
# 	listen 443 ssl;
# 	server_name YOUR_DOMAIN.com, www.YOUR_DOMAIN.com;

# 	ssl_certificate /etc/letsencrypt/live/YOUR_DOMAIN.com/fullchain.pem;
# 	ssl_certificate_key /etc/letsencrypt/live/YOUR_DOMAIN.com/privkey.pem;
# 		include /etc/letsencrypt/options-ssl-nginx.conf;
# 		ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

# 	location / {
# 		# For next.js
# 		proxy_pass http://nextjs:3000;
# 		proxy_http_version 1.1;
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection 'upgrade';
#     proxy_set_header Host $host;
#     proxy_cache_bypass $http_upgrade;
# 	}
